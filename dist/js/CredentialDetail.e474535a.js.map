{"version":3,"file":"js/CredentialDetail.e474535a.js","mappings":"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","sources":["webpack://i-am-verifiable-create/./node_modules/i-am-verifiable-button/src/components/IAmVerifiableButton.vue","webpack://i-am-verifiable-create/./node_modules/i-am-verifiable-button/src/components/IAmVerifiableButton.vue?b55c","webpack://i-am-verifiable-create/./node_modules/i-am-verifiable-button/index.js","webpack://i-am-verifiable-create/./src/composables/useAmount.js","webpack://i-am-verifiable-create/./src/components/candyMachine/CandyMachineBuyRow.vue","webpack://i-am-verifiable-create/./src/components/candyMachine/CandyMachineBuyRow.vue?6ec1","webpack://i-am-verifiable-create/./src/views/CredentialDetail.vue","webpack://i-am-verifiable-create/./src/views/CredentialDetail.vue?7437"],"sourcesContent":["<template>\n  <button @click=\"verifyButton\" class=\"i-am-verifiable-button\"><slot v-bind:isVerifying=\"isVerifyingComputed\" /></button>\n</template>\n<script setup>\nimport { ref } from \"@vue/reactivity\";\nimport { computed } from \"@vue/runtime-core\";\nimport { useIamVerification } from \"../useIAmVerifiable\";\nconst props = defineProps({\n  requisites: {\n    type: Array,\n    required: true,\n  },\n  isVerifying: {\n    type: Boolean,\n    default: false,\n  },\n});\n\nconst emit = defineEmits([\"verification:started\", \"verification:ended\", \"verification:succeded\", \"verification:failed\", \"update:isVerifying\"]);\n\nconst isVerifyingComputed = computed({\n  get: () => props.isVerifying,\n  set: (value) => emit(\"update:isVerifying\", value),\n});\n\n//Action of verification\nconst verifyButton = async () => {\n  emit(\"verification:started\");\n  isVerifyingComputed.value = true;\n  const value = await useIamVerification(props.requisites ?? []);\n  isVerifyingComputed.value = false;\n  if (value) {\n    emit(\"verification:succeded\");\n  } else {\n    emit(\"verification:failed\");\n  }\n  emit(\"verification:ended\");\n  return value;\n};\n</script>\n","import script from \"./IAmVerifiableButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./IAmVerifiableButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import IAmVerifiable from './src/plugins/IAmVerifiable'\nimport IAmVerifiableButton from './src/components/IAmVerifiableButton.vue'\n\nexport * as useIAmVerifiableCompositions from './src/useIAmVerifiable'\nexport {\n    IAmVerifiable\n}\n\nexport default IAmVerifiableButton\n\n\n","import { formatAmount } from \"@metaplex-foundation/js\";\n\n// Value must be amount\nexport const amountToNumber = (value) => {\n    const formatted = formatAmount(value)\n    return Number.parseFloat(formatted.replace(`${value.currency.symbol} `, ''));\n  };\n  ","<template>\n  <div class=\"py-4 px-2\">\n    <h6 class=\"text-gray-500\">Precio de este dispensador</h6>\n    <h2 class=\"text-primary-700 font-bold text-3xl my-2\">{{ amount }}</h2>\n    <div class=\"mb-4\">En este dispensador se poseen {{ candyMachine.itemsRemaining.toString() }} disponibles</div>\n    <!-- <button\n      class=\"py-3 px-8 rounded-lg text-white\"\n      :class=\"{\n        'purchase-button': !isInValid,\n        'purchase-button-disabled': isInValid,\n      }\"\n      :disabled=\"isInValid\"\n      @click=\"purchaseNft\"\n    >\n      {{ buttonText }}\n    </button> -->\n    <IAmVerifiableButton\n      class=\"py-3 px-8 rounded-lg text-white\"\n      :class=\"{\n        'purchase-button': !isInValid,\n        'purchase-button-disabled': isInValid,\n      }\"\n      :disabled=\"isInValid\"\n      v-model:isVerifying=\"isVerifying\"\n      @verification:failed=\"validationFailed\"\n      @verification:succeded=\"purchaseNft\"\n      :requisites=\"requisites ?? []\"\n    >\n      {{ buttonText }}\n    </IAmVerifiableButton>\n  </div>\n</template>\n<script setup>\nimport { formatAmount } from \"@metaplex-foundation/js\";\nimport { computed, ref, toRefs } from \"vue\";\nimport { useIamVerification, useNftsOfUser, normalizeNft } from \"i-am-verifiable-button/src/useIAmVerifiable\";\nimport IAmVerifiableButton from \"i-am-verifiable-button\";\n// import \"i-am-verifiable-button/src/css/main.css\";\nimport { useWorkspace, getKeyPair } from \"@/composables/useWorkspace\";\nimport { amountToNumber } from \"@/composables/useAmount\";\nimport { notify } from \"@kyvg/vue3-notification\";\nimport { useStore } from \"vuex\";\nimport { useWallet } from \"solana-wallets-vue\";\nimport { LAMPORTS_PER_SOL, SystemProgram, Transaction } from \"@solana/web3.js\";\n\nconst emit = defineEmits([\"purchase:started\", \"purchase:succeded\", \"purchase:ended\"]);\nconst store = useStore();\nconst props = defineProps([\"candyMachine\", \"requisites\", \"nft\", \"disabledExternal\"]);\nconst { candyMachine, nft, disabledExternal } = toRefs(props);\nconst isVerifying = ref(false);\nconst isPurchasing = ref(false);\nconst amount = computed(() => formatAmount(candyMachine.value.price));\nconst { connected } = useWallet();\nconst { nftsOfUser, isFetchingNftsOfUser } = useNftsOfUser();\nconst nftsCollectionAddress = computed(() => (nftsOfUser.value ? nftsOfUser.value.map((n) => n.collection.address.toBase58()) : []));\nconst alreadyPurchased = computed(() => nftsCollectionAddress.value.includes(nft.value.address.toBase58()));\nconst isInValid = computed(() => isFetchingNftsOfUser.value || isVerifying.value || isPurchasing.value || !connected.value || alreadyPurchased.value || disabledExternal.value);\nconst verifyButton = async () => {\n  isVerifying.value = true;\n  const value = await useIamVerification(props.requisites ?? []);\n  isVerifying.value = false;\n  return value;\n};\n\nconst validationFailed = () => {\n  notify({\n    type: \"error\",\n    title: \"No se poseen los requisitos necesarios para poder comprar esta credencial.\",\n  });\n};\n\nconst purchaseNft = async () => {\n  const { metaplex, connectionConfirm: connection } = useWorkspace();\n  const { publicKey } = getKeyPair();\n  isPurchasing.value = true;\n  const { wallet, sendTransaction, publicKey: _walletPub } = useWallet();\n  emit(\"purchase:started\");\n  // const isValid = await verifyButton();\n  const isValid = true;\n  if (isValid) {\n    try {\n      const userId = wallet.value;\n\n      let transaction = new Transaction().add(\n        SystemProgram.transfer({\n          fromPubkey: _walletPub.value,\n          toPubkey: publicKey,\n          //We the price in sols\n          lamports: LAMPORTS_PER_SOL * amountToNumber(candyMachine.value.price),\n          // lamports: 1,\n        })\n      );\n\n      const {\n        context: { slot: minContextSlot },\n        value: { blockhash, lastValidBlockHeight },\n      } = await connection.getLatestBlockhashAndContext();\n\n      const signature = await sendTransaction(transaction, connection, {\n        minContextSlot,\n      });\n\n      const result = await connection.confirmTransaction({ blockhash, lastValidBlockHeight, signature });\n      if (result.value.err) {\n        notify({\n          type: \"error\",\n          title: \"Ocurrio un error al generar la credencial si los problemas persisten refresca la página.\",\n        });\n      } else {\n        const response = await _axios.post(\"mint/nft\", {\n          candyMachine: candyMachine.value.address,\n          wallet: _walletPub.value,\n        });\n\n        nftsOfUser.value.push(normalizeNft(response.data.nft));\n        emit(\"purchase:succeded\", candyMachine);\n        notify({\n          type: \"success\",\n          title: \"Se ha comprado con éxito la credencial.\",\n        });\n      }\n    } catch (error) {\n      if (error.name && error.name.toLowerCase() == \"metaplexerror\" && error.cause.message.toLowerCase().includes(\"attempt to debit an account but found no record of a prior credit\")) {\n        notify({\n          type: \"error\",\n          title: \"No se tiene el suficiente crédito para comprar la credencial.\",\n        });\n      } else {\n        notify({\n          type: \"error\",\n          title: \"Ocurrio un error al generar la credencial si los problemas persisten refresca la página.\",\n        });\n        //Refresh the candy machine\n        const updatedCandyMachine = await metaplex.value.candyMachinesV2().refresh(candyMachine.value);\n        const key = updatedCandyMachine.address.toBase58();\n        store.state.credentials.candyMachinesMapped[key] = updatedCandyMachine;\n      }\n    }\n  } else {\n    validationFailed();\n  }\n  isPurchasing.value = false;\n  emit(\"purchase:ended\");\n};\n\nconst buttonText = computed(() => {\n  if (alreadyPurchased.value) {\n    return \"Ya se tiene la credencial\";\n  }\n  if (isVerifying.value) {\n    return \"Verificando\";\n  }\n  if (isPurchasing.value) {\n    return \"Procesando\";\n  }\n  return \"Comprar credencial\";\n});\n</script>\n<style scoped lang=\"postcss\">\n.purchase-button {\n  @apply bg-gradient-to-r from-primary-500 via-primary-600 to-primary-700 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-primary-300 dark:focus:ring-primary-800 shadow-lg shadow-primary-500/50 dark:shadow-lg dark:shadow-primary-800/80;\n}\n\n.purchase-button-disabled {\n  @apply bg-gray-400;\n}\n</style>","import script from \"./CandyMachineBuyRow.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CandyMachineBuyRow.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./CandyMachineBuyRow.vue?vue&type=style&index=0&id=60830a2c&scoped=true&lang=postcss\"\n\nimport exportComponent from \"/Users/augustoalonso/vue/i-am-verifiable-create/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-60830a2c\"]])\n\nexport default __exports__","<template>\n  <div class=\"container mx-auto flex flex-wrap py-8\">\n    <!-- NFT is fetching -->\n    <div class=\"w-full\" v-if=\"isFetchingNft\">\n      <lottie-player\n        class=\"self-center mt-4 mx-auto\"\n        src=\"https://assets9.lottiefiles.com/packages/lf20_usmfx6bp.json\"\n        background=\"transparent\"\n        speed=\"1\"\n        style=\"width: 300px; height: 300px\"\n        loop\n        autoplay\n      ></lottie-player>\n      <div class=\"text-xl font-semibold text-center mt-2\">Cargando Credencial</div>\n    </div>\n    <!-- NFT not found -->\n    <template v-else-if=\"!nft\">\n      <div class=\"mx-auto\">\n        <lottie-player\n          class=\"self-center mt-4 mx-auto\"\n          src=\"https://assets4.lottiefiles.com/private_files/lf30_e3pteeho.json\"\n          background=\"transparent\"\n          speed=\"1\"\n          style=\"width: 300px; height: 300px\"\n          loop\n          autoplay\n        ></lottie-player>\n        <div class=\"text-xl font-semibold text-center mt-2\">Hubo un error al cargar la credencial por favor prueba de nuevo</div>\n      </div>\n    </template>\n\n    <template v-else>\n      <!-- Image and description -->\n      <div class=\"flex flex-wrap w-full md:w-2/5 lg:w-2/6 gap-y-8\">\n        <img :src=\"imageSrc\" v-if=\"imageSrc\" class=\"credential-cover\" />\n        <div v-else class=\"credential-cover\" />\n        <!-- Description -->\n        <div class=\"w-full rounded-lg border border-slate-300 overflow-clip\">\n          <div class=\"text-lg p-3 text-center font-bold border-b border-slate-300\">Descripción</div>\n          <div class=\"text-base p-3 w-full bg-slate-300/20\">{{ nft.json.description }}</div>\n\n          <div class=\"text-lg p-3 text-center font-bold border-y border-slate-300\">Requisitos</div>\n          <div class=\"text-base w-full bg-slate-300/20 p-3\">\n            <template v-if=\"isFetchingRequisited\">Cargando requisitos</template>\n            <ul class=\"list-disc list-outside px-3\" v-else-if=\"requisites.length\">\n              <li v-for=\"requisite in requisites\" :key=\"requisite.address.toBase58()\">{{ requisite.name }}</li>\n            </ul>\n            <div v-else>No tiene requisitos</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"px-8 w-full md:w-3/5 lg:w-4/6\">\n        <div class=\"flex flex-col gap-y-4\">\n          <h1 class=\"text-3xl font-bold\">{{ nft.name }}</h1>\n          <h1 class=\"text-base font-light\">hecho por RENAP</h1>\n          <div class=\"w-full rounded-lg border border-slate-300 overflow-clip\">\n            <h1 class=\"text-xl p-3 text-center font-bold border-b border-slate-300\">Configuración</h1>\n            <div class=\"text-base p-3 w-full bg-slate-300/20\">{{ expirationText }}</div>\n          </div>\n          <div class=\"w-full rounded-lg border border-slate-300 overflow-clip\">\n            <div class=\"text-lg p-3 text-center font-bold border-b border-slate-300\">Detalles de compra</div>\n            <div class=\"text-base p-3 w-full bg-slate-300/20\">\n              <v-spinner v-if=\"isFetchingCandyMachines\" />\n              <div v-else-if=\"!candyMachines.length\">No hay opciónes de compra por el momento</div>\n              <div class=\"flex flex-wrap\" v-else>\n                <candy-machine-buy-row\n                  @purchase:started=\"disabledExternal = true\"\n                  @purchase:ended=\"disabledExternal = false\"\n                  @purchase:succeded=\"refreshCandyMachine\"\n                  :disabledExternal=\"disabledExternal\"\n                  class=\"border-b border-gray-300 last:border-b-0 md:w-full lg:w-1/2 xl:w-1/3\"\n                  v-for=\"candyMachine in candyMachines\"\n                  :key=\"candyMachine.address.toBase58()\"\n                  :candyMachine=\"candyMachine\"\n                  :nft=\"nft\"\n                  :requisites=\"nft.json.requisites ?? []\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </template>\n  </div>\n</template>\n<script setup>\nimport { PublicKey } from \"@solana/web3.js\";\nimport { computed, onMounted, ref } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport { useStore } from \"vuex\";\n// import { useRequisites, useNftsOfUser } from \"@/composables/useIAmVerifiable\";\nimport { useRequisites, useNftsOfUser } from \"i-am-verifiable-button/src/useIAmVerifiable\";\nimport { CandyMachineBuyRow } from \"@/components/candyMachine\";\nimport { useWorkspace } from \"@/composables/useWorkspace\";\n\nconst route = useRoute();\nconst store = useStore();\nconst nftAddress = route.params.address;\n\nconst isFetchingNft = ref(false);\nconst disabledExternal = ref(false);\nconst isFetchingCandyMachines = ref(false);\nconst nft = computed(() => store.getters.nftsMapped[nftAddress]);\nconst { requisites, isFetchingRequisited } = useRequisites(nft);\nconst { nftsOfUser, isFetchingNftsOfUser } = useNftsOfUser();\nconst expirationText = computed(() => {\n  if (nft.value.json && nft.value.json.expiration) {\n    const expiration = nft.value.json.expiration;\n    return `La credencial expira ${expiration.years} años, ${expiration.months} meses y ${expiration.days} días despues de su emisión`;\n  }\n  return \"Esta credencial no expira\";\n});\nconst imageSrc = computed(() => {\n  return nft.value && nft.value.json ? nft.value.json.image : null;\n});\n\nconst candyMachinesMintMapped = computed(() => store.getters.candyMachinesMintMapped);\nconst candyMachines = computed(() => {\n  if (nft.value) {\n    const key = nft.value.mint.address.toBase58();\n    if (key in candyMachinesMintMapped.value) {\n      return candyMachinesMintMapped.value[key].filter((candyMachine) => {\n        //Only where available\n        return parseInt(candyMachine.itemsRemaining.toString()) > 0;\n      });\n    }\n  }\n  return [];\n});\n\nconst refreshCandyMachine = async (candyMachine) => {\n  const key = candyMachine.collectionMintAddress.toBase58();\n  const { metaplex } = useWorkspace();\n  const updated = metaplex.value.candyMachinesV2().refresh(candyMachine);\n  store.dispatch(\"updateCandyMachine\", updated);\n};\n\nconst getNftFromMintAddress = async () => {\n  isFetchingNft.value = true;\n  await store.dispatch(\"getNftFromMintAddress\", new PublicKey(nftAddress));\n  isFetchingNft.value = false;\n};\n\nconst fetchMachines = async () => {\n  isFetchingCandyMachines.value = true;\n  await store.dispatch(\"getCandyMachines\", nftAddress);\n  isFetchingCandyMachines.value = false;\n};\n\nonMounted(async () => {\n  if (!nft.value) {\n    await getNftFromMintAddress();\n    fetchMachines();\n  } else {\n    fetchMachines();\n  }\n});\n</script>\n<style scoped lang=\"postcss\">\n.credential-cover {\n  @apply rounded-lg w-full aspect-[8/9] object-contain bg-primary-200 shadow;\n}\n</style>","import script from \"./CredentialDetail.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CredentialDetail.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./CredentialDetail.vue?vue&type=style&index=0&id=194fa66b&scoped=true&lang=postcss\"\n\nimport exportComponent from \"/Users/augustoalonso/vue/i-am-verifiable-create/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-194fa66b\"]])\n\nexport default __exports__"],"names":["isVerifyingComputed","get","props","isVerifying","set","value","emit","verifyButton","async","requisites","__exports__","amountToNumber","formatted","Number","parseFloat","replace","currency","symbol","store","candyMachine","nft","disabledExternal","isPurchasing","amount","price","connected","nftsOfUser","isFetchingNftsOfUser","nftsCollectionAddress","map","n","collection","address","toBase58","alreadyPurchased","includes","isInValid","validationFailed","type","title","purchaseNft","metaplex","connectionConfirm","connection","useWorkspace","publicKey","wallet","sendTransaction","_walletPub","isValid","transaction","Transaction","add","SystemProgram","fromPubkey","toPubkey","lamports","LAMPORTS_PER_SOL","context","slot","minContextSlot","blockhash","lastValidBlockHeight","getLatestBlockhashAndContext","signature","result","confirmTransaction","err","response","_axios","post","push","data","error","name","toLowerCase","cause","message","updatedCandyMachine","candyMachinesV2","refresh","key","state","credentials","candyMachinesMapped","buttonText","route","nftAddress","params","isFetchingNft","isFetchingCandyMachines","getters","nftsMapped","isFetchingRequisited","expirationText","json","expiration","years","months","days","imageSrc","image","candyMachinesMintMapped","candyMachines","mint","filter","parseInt","itemsRemaining","toString","refreshCandyMachine","collectionMintAddress","updated","dispatch","getNftFromMintAddress","PublicKey","fetchMachines"],"sourceRoot":""}